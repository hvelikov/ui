package bg.comsoft.test;

import bg.comsoft.data.entity.*;
import io.quarkus.logging.Log;
import io.quarkus.test.junit.QuarkusTest;
import jakarta.persistence.Query;
import jakarta.transaction.Transactional;
import org.junit.jupiter.api.*;

import java.math.BigDecimal;
import java.util.List;

@QuarkusTest
//@Disabled
@TestClassOrder(ClassOrderer.OrderAnnotation.class)
@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
@Order(1)
public class FrmJpaTest {
    @Order(1) //@Disabled
    @Test
    @Transactional
    public void registerDelivery() {
        Log.infof("\n ********* Deliveries %s, Firms %s  *************", Nalichnosti.count(), Firmi.count());
        // get last inventory record
        Query nativeQuery = Nalichnosti.getEntityManager().createNativeQuery("select max(id) from NALICHNOSTI");
        BigDecimal rId = (BigDecimal)nativeQuery.getSingleResult();

        Nalichnosti delivery = Nalichnosti.findById( rId.longValue());
        Firmi deliveryFrm = delivery.firmaFid;
        List<Nalitem> deliveryRecord = Nalitem.find("avail.id=?1", delivery.id).list();

        Log.infof("\n Delivery id: %s, dateIn: %s, karta: %s \n Firma Id: %s, fname: %s", delivery.id, delivery.dateIn, delivery.karta, deliveryFrm.id,  deliveryFrm.fname);

        for(Nalitem nalitem :  deliveryRecord) {
            Produkti prod = nalitem.prod;
            Log.infof("%s, %s, %s,  %s, %s", prod.partNumber, prod.stshort,  nalitem.qty,  nalitem.worm, nalitem.pricein);
            for (SerNum serNum : nalitem.serNums) {
               Log.infof("%s,  %s ", serNum.sernum, serNum.snumDesc);
            }
        }
    }
}

//        PanacheQuery<PanacheEntityBase> query = Nalichnosti.find("where id = ( select max(n.id) from Nalichnosti n)");
//        OrderRecord orderRecord = query.project(OrderRecord.class).list().get(0);

/*
 record OrderRecord(Long id) {
    // Generated by lombok
    public OrderRecord(Long id) {
        this.id = id;
    }
*/


